/*
 * This file is part of the nivo project.
 *
 * Copyright 2016-present, RaphaÃ«l Benitte.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
import React from 'react';
import PropTypes from 'prop-types';
import LegendSvg from './LegendSvg';
import { computeDimensions, computePositionFromAnchor } from '../compute';
import { DIRECTION_ROW, DIRECTION_COLUMN, DIRECTION_BOTTOM_TO_TOP, DIRECTION_LEFT_TO_RIGHT, DIRECTION_RIGHT_TO_LEFT, DIRECTION_TOP_TO_BOTTOM, ANCHOR_TOP, ANCHOR_TOP_RIGHT, ANCHOR_RIGHT, ANCHOR_BOTTOM_RIGHT, ANCHOR_BOTTOM, ANCHOR_BOTTOM_LEFT, ANCHOR_LEFT, ANCHOR_TOP_LEFT, ANCHOR_CENTER } from '../constants';

var BoxLegendSvg = function BoxLegendSvg(_ref) {
    var data = _ref.data,
        containerWidth = _ref.containerWidth,
        containerHeight = _ref.containerHeight,
        translateX = _ref.translateX,
        translateY = _ref.translateY,
        anchor = _ref.anchor,
        direction = _ref.direction,
        padding = _ref.padding,
        justify = _ref.justify,
        itemWidth = _ref.itemWidth,
        itemHeight = _ref.itemHeight,
        itemDirection = _ref.itemDirection,
        itemsSpacing = _ref.itemsSpacing,
        symbolSize = _ref.symbolSize,
        symbolSpacing = _ref.symbolSpacing,
        symbolShape = _ref.symbolShape;

    var _computeDimensions = computeDimensions({
        itemCount: data.length,
        itemWidth: itemWidth,
        itemHeight: itemHeight,
        itemsSpacing: itemsSpacing,
        direction: direction,
        padding: padding
    }),
        width = _computeDimensions.width,
        height = _computeDimensions.height;

    var _computePositionFromA = computePositionFromAnchor({
        anchor: anchor,
        translateX: translateX,
        translateY: translateY,
        containerWidth: containerWidth,
        containerHeight: containerHeight,
        width: width,
        height: height
    }),
        x = _computePositionFromA.x,
        y = _computePositionFromA.y;

    return React.createElement(LegendSvg, {
        data: data,
        x: x,
        y: y,
        direction: direction,
        padding: padding,
        justify: justify,
        itemWidth: itemWidth,
        itemHeight: itemHeight,
        itemDirection: itemDirection,
        itemsSpacing: itemsSpacing,
        symbolSize: symbolSize,
        symbolSpacing: symbolSpacing,
        symbolShape: symbolShape
    });
};

BoxLegendSvg.propTypes = {
    containerWidth: PropTypes.number.isRequired,
    containerHeight: PropTypes.number.isRequired,
    translateX: PropTypes.number.isRequired,
    translateY: PropTypes.number.isRequired,
    anchor: PropTypes.oneOf([ANCHOR_TOP, ANCHOR_TOP_RIGHT, ANCHOR_RIGHT, ANCHOR_BOTTOM_RIGHT, ANCHOR_BOTTOM, ANCHOR_BOTTOM_LEFT, ANCHOR_LEFT, ANCHOR_TOP_LEFT, ANCHOR_CENTER]).isRequired,
    direction: PropTypes.oneOf([DIRECTION_ROW, DIRECTION_COLUMN]).isRequired,
    padding: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({
        top: PropTypes.number,
        right: PropTypes.number,
        bottom: PropTypes.number,
        left: PropTypes.number
    })]).isRequired,
    justify: PropTypes.bool,

    itemWidth: PropTypes.number.isRequired,
    itemHeight: PropTypes.number.isRequired,
    itemDirection: PropTypes.oneOf([DIRECTION_LEFT_TO_RIGHT, DIRECTION_RIGHT_TO_LEFT, DIRECTION_TOP_TO_BOTTOM, DIRECTION_BOTTOM_TO_TOP]),
    itemsSpacing: PropTypes.number.isRequired,
    symbolSize: PropTypes.number,
    symbolSpacing: PropTypes.number,
    symbolShape: PropTypes.oneOfType([PropTypes.string, PropTypes.func])
};

BoxLegendSvg.defaultProps = {
    translateX: 0,
    translateY: 0,
    itemsSpacing: LegendSvg.defaultProps.itemsSpacing,
    padding: LegendSvg.defaultProps.padding
};

export default BoxLegendSvg;